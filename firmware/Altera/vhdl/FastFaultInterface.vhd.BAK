-----------------------------------------------------------------
--                                                             --
-----------------------------------------------------------------
--
--  FastFaultInterface.vhd -
--
--  Copyright(c) Stanford Linear Accelerator Center 2000
--
--  Author: JEFF OLSEN
--
--  Last change: JO 7/14/2016 3:05:43 PM
--
--


library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

entity FastFaultInterface is
  port (

	Clock				: in std_logic;
	Reset				: in std_logic;
	ClrFaults 		: in std_logic;
	BeamUnderEn		: in std_logic;

-- Fast Signal Comparator inputs
	Beam_I_Under 	: in std_logic;
	Beam_I_Over		: in std_logic;
	Beam_V_Over		: in std_logic;
	Fwd_Over			: in std_logic;
	Refl_Over		: in std_logic;

	FaultVectorOut	: out std_logic_vector(4 downto 0);
	FaultOut 		: out std_logic;
	RFOff				: out std_logic

    );
end FastFaultInterface;


architecture Behaviour of FastFaultInterface is

	signal FastFaultVector		: std_logic(4 downto 0);
	signal FastFault				: std_Logic;
	signal BeamUnderCntr			: std_logic_vector(7 downto 0);
begin

latchFastFaults : for i 0 to 4 generate
DeBounce : DeBouncer
port map (
    Clock     	=> Clock,
    SysReset   => Reset,
	 LatchReset	=> ClrFault,
	 ClkEn		=> '1',
	 Input		=> FastFaultVector(i),
    db_Out 		=> DbFastFaultVector(i)
	);

Fault_p : process(Clock, Reset)
begin
if (Reset = '1') then
	FaultOut 		<= '0';
	RFOff				<- '0';
	FaultVectorOut	<= (Others => '0');
	BeamUnderCntr 	<= (Others => '0');
	BeamUnderFault	<= '0';
elsif (Clock'event and Clock = '1') then
	if (DbFastFaultVector(3 downto 0) <> "0000") then
		if (FaultOut = '0') then
			FaultOut 		<= '1';
			FaultVectorOut <= DbFastFaultVector;
		end if;
	else
		FaultOut <= '0';
	end if;

	if ((BeamUnderI = '1') and (BeamUnderEn = '1')) then
			if (BeamUnderCntr = x"C8") then
				RFOff 			<= '1';
			else
				BeamUnderCntr 	<= BeamUnderCntr + 1;
			end if;
		end if;

	elsif (ClrFault = '1') then
		BeamUnderCntr 	<= (Others => '0';
		RFOff				<= '0';

	end if;
end if;
end process;

end behaviour;
